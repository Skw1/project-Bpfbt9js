{"version":3,"file":"commonHelpers.js","sources":["../src/js/totalcartsum.js","../src/js/cart.js"],"sourcesContent":["import refsAPI from './refs.js';\nimport fetchApi from './fetchApi.js';\nimport localStorageApi from './localStorageApi.js';\nimport closeIcon from '../img/icons.svg#close-icon';\nimport { drawProductCart } from './cart.js';\nimport { drawHeaderCartNumber } from './discount.js';\n\nasync function totalCartSum() {\n  const frontEnd = new refsAPI();\n  frontEnd.bigCartNumber.textContent = 'CART (0)';\n  var productsToDraw = [];\n  var cartSum = 0;\n  //load cart with products\n  const cart = localStorageApi.loadCart();\n\n  //get  info for each product in cart\n  if ('products' in cart) {\n    const products = await Promise.all(\n      cart.products.map(product => {\n        return fetchApi.product(product.productId);\n      })\n    );\n    products.forEach(product => {\n      //add totall product price to totall cart sum\n      cartSum =\n        cartSum +\n        product.price * cart.products[products.indexOf(product)].amount;\n      // console.log(typeof cart.products[products.indexOf(product)].amount);\n      productsToDraw.push(`\n            \n            <li class=\"cart-product\" data-productId=\"${product._id}\">\n            <div class=\"cart-product-img\">\n              <img class=\"card-img\"\n                src=\"${product.img}\"\n                alt=\"${product.name}\"\n              />\n            </div>\n\n            <div class=\"cart-product-card\">\n            <div class=\"cart-product-name-container\">\n              <h3 class=\"cart-product-name\">${product.name}</h3>\n              <button data-productId=\"${product._id}\" type=\"button\" class=\"cart-product-delete-btn\">\n              <svg class=\"cart-icon-close\" width=\"18\" height=\"18\">\n                    <use href=\"${closeIcon}\"></use>\n                    </svg>\n              </button>\n            </div>\n\n            <div class=\"cart-product-info\">\n                  <p class=\"cart-category-title\">\n                    Category:\n                    <span class=\"cart-category-name\">${product.category}</span>\n                  </p>\n                  <p class=\"cart-product-size\">\n                    Size: <span class=\"cart-product-size-value\">${product.size}</span>\n                  </p>\n                  <p class=\"cart-product-price\">$${product.price}</p>\n            </div>\n          </li>\n          `);\n    });\n    frontEnd.bigCartNumber.textContent = 'CART (' + cart.products.length + ')';\n  }\n  frontEnd.cartEmptyContainer.style.display = 'none';\n  frontEnd.cartContainer.innerHTML = productsToDraw.join('');\n  frontEnd.totalCartSum.textContent = 'Sum: $' + cartSum.toFixed(2);\n}\n\nasync function checkout(event) {\n  event.preventDefault();\n  const frondEnd = new refsAPI();\n  const cart = localStorageApi.loadCart();\n  if (frondEnd.cartEmail.value.trim().length !== 0) {\n    if ('products' in cart) {\n      if (cart.products.length !== 0) {\n        try {\n          cart.email = frondEnd.cartEmail.value.trim();\n          const message = await fetchApi.order(cart);\n          localStorageApi.deleteCart();\n          drawHeaderCartNumber();\n          totalCartSum();\n          alert(message.message);\n        } catch (error) {\n          alert('Check email!');\n        }\n      } else {\n        alert('empty cart2!');\n      }\n    } else {\n      alert('empty cart1!');\n    }\n  } else {\n    alert('empty email!');\n  }\n}\n\nexport { totalCartSum, checkout };\n","import fetchAPI from './fetchApi.js';\nimport localStorageApi from './localStorageApi.js';\nimport closeIcon from '../img/icons.svg#close-icon';\nimport { form } from '/js/footer-modal.js';\nimport { postEmail } from '/js/footer-modal.js';\nimport { onOpenModal } from './footer-modal.js';\n\nimport { totalCartSum, checkout } from './totalcartsum.js';\nimport { drawHeaderCartNumber } from './discount.js';\nimport refsAPI from './refs.js';\n\n//const cartContainer = document.querySelector('.cart-products-order-container');\n//const cartEmpty = document.querySelector('.cart-empty-product');\n\nexport async function drawProductCart() {\n  let cart = localStorageApi.loadCart();\n  console.log(cart);\n\n  const productsInCart = [];\n  if ('products' in cart) {\n    if (cart.products.length) {\n      cart.products.forEach(({ productId }) =>\n        getProductApi(productId).then(resp => productsInCart.push(resp))\n      );\n      cartEmpty.style.display = 'none';\n    }\n  }\n  // console.log(productsInCart);\n\n  cartContainer.innerHTML = cartMarkup(productsInCart);\n\n  document\n    .querySelector('.cart-product-delete-btn')\n    .addEventListener('click', event => {\n      const id = event.target.dataset.productid;\n      let cart = localStorageApi.loadCart();\n      if ('products' in cart) {\n        const resalt = cart.products.findIndex(\n          product => product.productId === id\n        );\n        if (resalt !== -1) {\n          cart.products.splice(resalt, 1);\n        }\n      }\n      localStorageApi.saveCart(cart);\n    });\n\n  document\n    .querySelector('.cart-delete-button')\n    .addEventListener('click', () => {\n      cartEmpty.style.display = 'block';\n      localStorageApi.deleteCart();\n    });\n}\n\nasync function getProductApi(id) {\n  const product = await fetchAPI.product(id);\n  return product;\n}\n\nfunction cartMarkup(products) {\n  return products\n    .map(({ _id, name, img, category, price, size }) => {\n      return `\n             <div class=\"cart-product-container\">\n            <div class=\"cart-delete-all\">\n            <button type=\"button\" class=\"cart-delete-button\"> Delete All\n                <span class=\"cart-close-icon\">\n                    <svg class=\"cart-icon-close\" width=\"24\" height=\"24\">\n                    <use href=\"${closeIcon}\"></use>\n                    </svg>\n                </span>\n            </button>\n            </div>\n\n            <ul class=\"cart-products-list\">\n            <li class=\"cart-product\" data-productId=\"${_id}\">\n            <div class=\"cart-product-img\">\n              <img class=\"card-img\"\n                src=\"${img}\"\n                alt=\"${name}\"\n              />\n            </div>\n\n            <div class=\"cart-product-card\">\n            <div class=\"cart-product-name-container\">\n              <h3 class=\"cart-product-name\">${name}</h3>\n              <button data-productId=\"${_id}\" type=\"button\" class=\"cart-product-delete-btn\">\n              <svg class=\"cart-icon-close\" width=\"18\" height=\"18\">\n                    <use href=\"${closeIcon}\"></use>\n                    </svg>\n              </button>\n            </div>\n\n            <div class=\"cart-product-info\">\n                  <p class=\"cart-category-title\">\n                    Category:\n                    <span class=\"cart-category-name\">${category}</span>\n                  </p>\n                  <p class=\"cart-product-size\">\n                    Size: <span class=\"cart-product-size-value\">${size}</span>\n                  </p>\n                  <p class=\"cart-product-price\">$${price}</p>\n            </div>\n          </li>\n          </ul>\n          </div>\n\n          <div class=\"cart-order-container\">\n            <h2 class=\"order-title\">Your order</h2>\n\n          <div class=\"order-container\">\n            <p class=\"order-text\">Total</p>\n            <p class=\"order-sum-text\">Sum:</p>\n            <p class=\"order-total-sum\">${price.toFixed(2)}</p>\n          </div>\n\n          <div class=\"order-input-checkout\">\n            <label class=\"order-label-chekout\" for=\"email\"></label>\n            <span class=\"order-mail-span\">Mail:</span>\n            <input\n                class=\"order-email\"\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                required\n            />\n            <button class=\"order-checkout-button\" type=\"submit\">Checkout</button>\n          </div>\n\n          </div>`;\n    })\n    .join('');\n}\nconst cart = localStorageApi.loadCart();\nfunction calculateTotalSum(cart) {\n  let totalSum = 0;\n  if ('products' in cart) {\n    totalSum = cart.products.reduce((sum, product) => {\n      return sum + product.price;\n    }, 0);\n  }\n  return totalSum;\n}\n\n//const totalSumElement = document.querySelector('.order-total-sum');\n//const totalSum = calculateTotalSum(cart);\n//totalSumElement.textContent = `$${totalSum.toFixed(2)}`;\n\ndrawHeaderCartNumber();\ntotalCartSum();\n\nconst frondEnd = new refsAPI();\n\nfrondEnd.buttonCheckout.addEventListener('click', checkout);\n\nform.addEventListener('submit', postEmail);\n"],"names":["totalCartSum","frontEnd","refsAPI","productsToDraw","cartSum","cart","localStorageApi","products","product","fetchApi","closeIcon","checkout","event","frondEnd","message","drawHeaderCartNumber","form","postEmail"],"mappings":"oIAOA,eAAeA,GAAe,CAC5B,MAAMC,EAAW,IAAIC,EACrBD,EAAS,cAAc,YAAc,WACrC,IAAIE,EAAiB,CAAA,EACjBC,EAAU,EAEd,MAAMC,EAAOC,EAAgB,WAG7B,GAAI,aAAcD,EAAM,CACtB,MAAME,EAAW,MAAM,QAAQ,IAC7BF,EAAK,SAAS,IAAIG,GACTC,EAAS,QAAQD,EAAQ,SAAS,CAC1C,CACP,EACID,EAAS,QAAQC,GAAW,CAE1BJ,EACEA,EACAI,EAAQ,MAAQH,EAAK,SAASE,EAAS,QAAQC,CAAO,GAAG,OAE3DL,EAAe,KAAK;AAAA;AAAA,uDAE6BK,EAAQ;AAAA;AAAA;AAAA,uBAGxCA,EAAQ;AAAA,uBACRA,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAMeA,EAAQ;AAAA,wCACdA,EAAQ;AAAA;AAAA,iCAEfE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAQsBF,EAAQ;AAAA;AAAA;AAAA,kEAGGA,EAAQ;AAAA;AAAA,mDAEvBA,EAAQ;AAAA;AAAA;AAAA,WAGhD,CACX,CAAK,EACDP,EAAS,cAAc,YAAc,SAAWI,EAAK,SAAS,OAAS,GACxE,CACDJ,EAAS,mBAAmB,MAAM,QAAU,OAC5CA,EAAS,cAAc,UAAYE,EAAe,KAAK,EAAE,EACzDF,EAAS,aAAa,YAAc,SAAWG,EAAQ,QAAQ,CAAC,CAClE,CAEA,eAAeO,EAASC,EAAO,CAC7BA,EAAM,eAAc,EACpB,MAAMC,EAAW,IAAIX,EACfG,EAAOC,EAAgB,WAC7B,GAAIO,EAAS,UAAU,MAAM,KAAM,EAAC,SAAW,EAC7C,GAAI,aAAcR,EAChB,GAAIA,EAAK,SAAS,SAAW,EAC3B,GAAI,CACFA,EAAK,MAAQQ,EAAS,UAAU,MAAM,KAAI,EAC1C,MAAMC,EAAU,MAAML,EAAS,MAAMJ,CAAI,EACzCC,EAAgB,WAAU,EAC1BS,IACAf,IACA,MAAMc,EAAQ,OAAO,CACtB,MAAC,CACA,MAAM,cAAc,CACrB,MAED,MAAM,cAAc,OAGtB,MAAM,cAAc,OAGtB,MAAM,cAAc,CAExB,CCyCaR,EAAgB,SAAW,EAexCS,IACAf,IAEA,MAAMa,EAAW,IAAIX,EAErBW,EAAS,eAAe,iBAAiB,QAASF,CAAQ,EAE1DK,EAAK,iBAAiB,SAAUC,CAAS"}